// Generated by CoffeeScript 1.9.2
(function() {
  var END_REPEAT_LENGTH, MIN_LENGTH, VOWEL_REPEAT_LENGTH, sanitizer;

  sanitizer = require('sanitizer');

  VOWEL_REPEAT_LENGTH = 10;

  END_REPEAT_LENGTH = 30;

  MIN_LENGTH = 10;

  module.exports = {
    khan: function(name) {
      var first, i, index, j, last, last_vowel_index, len, len1, letter, middle, templast, vowel, vowels;
      name = sanitizer.escape(name.toUpperCase());
      vowels = ['A', 'E', 'I', 'O', 'U', 'Y'];
      last_vowel_index = 0;
      for (i = 0, len = vowels.length; i < len; i++) {
        vowel = vowels[i];
        index = name.lastIndexOf(vowel);
        if (index > last_vowel_index) {
          last_vowel_index = index;
        }
      }
      first = name.substring(0, last_vowel_index);
      middle = name.substring(last_vowel_index, last_vowel_index + 1);
      last = name.substring(last_vowel_index + 1);
      templast = "";
      for (j = 0, len1 = last.length; j < len1; j++) {
        letter = last[j];
        templast += Array(Math.floor(END_REPEAT_LENGTH / last.length)).join(letter);
      }
      last = templast;
      if (first.length + VOWEL_REPEAT_LENGTH + last.length < MIN_LENGTH) {
        VOWEL_REPEAT_LENGTH = END_REPEAT_LENGTH;
      }
      return first + Array(VOWEL_REPEAT_LENGTH).join(middle) + last;
    },
    jones: function(noun) {
      noun = sanitizer.escape(noun);
      noun = noun[0].toUpperCase() + noun.slice(1);
      return noun + '. I <b><i>hate</i></b> ' + noun + '.';
    }
  };

}).call(this);

//# sourceMappingURL=operations.js.map
